<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF7eAACA+AAAffUNAHz1YAB8
        9aAAfPWnAHz1pgB89aYAfPWmAHz1pgB89aYAfPWmAHz1pgB89aYAfPWmAHz1pgB89aYAfPWmAHz1pgB8
        9aYAfPWmAHz1pgB89aYAfPWmAHz1pgB89acAfPWcAHz1LgB89QAAAAAAAAAAAAAAAAAAfPQAAHzzBAB8
        9XwAfPX0AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89v8gkbGUWbU6NlCvTAAAAAAAAAAAAAB8
        9QAAfPUUAHz11QB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz3/zWehf9TsUamUK9MAAAA
        AAAAAAAAAHz1AAB89RgAfPXnAHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPf/NZ6F/1Ox
        RqZQr0wAAAAAAAAAAAAAfPUAAHz1GAB89ecAfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9/81noX/U7FGplCvTAAAAAAAAAAAAAB89QAAfPUYAHz15wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AH31/wB9
        9v8Affb/AHz3/zWfhf9TskWmUbBLAAAAAAAAAAAAAHz1AAB89RgAfPXnAHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHv1/wJq
        5/8EUNX/BUvR/wdO0v8ITtL/Glur/x5WoOEMNcCWDDa/EAw2vwAAfPUAAHz1GAB89ecAfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8Daef/EETI/zVizv81YM3/EjrA/ww0vv8LNMD/CzTB/ww2v+cMNr8YDDa/AAB89QAAfPUYAHz15wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AH31/wRQ1f80Yc7/odn4/6HY+P80Yc7/CTO+/ww2v/8MNr//DDa/5ww2vxgMNr8AAHz1AAB8
        9RgAfPXnAHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AffX/BFDV/zRhzv+g1/j/n9f3/zRhzv8JM77/DDa//ww2v/8MNr/nDDa/GAw2
        vwAAfPUAAHz1GAB89ecAfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8Cauf/EEXI/zRgzv80X83/EjrA/ww0vv8LNMD/CzTB/ww2
        v+cMNr8YDDa/AAB89QAAfPUYAHz15wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8Cauf/BFLV/wVM0f8HTtL/CE7S/xpb
        q/8eVqDhDDXAlgw2vxAMNr8AAHz1AAB89RgAfPXnAHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AffX/AH32/wB9
        9v8AfPf/NZ+F/1OyRaZRsEsAAAAAAAAAAAAAfPUAAHz1GAB89ecAfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89/81noX/U7FGplCvTAAAAAAAAAAAAAB89QAAfPUYAHz15wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB89f8AfPX/AHz1/wB8
        9f8AfPX/AHz1/wB89f8AfPX/AHz3/zWehv9TsUamUK9MAAAAAAAAAAAAAHz1AAB89RgAfPXnAH32/wB8
        9v8Ae/X/AHv1/wB79f8Ae/X/AHv1/wB79f8Ae/X/AHv1/wB79f8Ae/X/AHv1/wB79f8Ae/X/AHv1/wB7
        9f8Ae/X/AHv1/wB79f8Ae/b/AHz3/wB89/8Ce/D/N51+/1OxR6ZQr0wAAAAAAAAAAAAAfPUAAH/4GAB3
        7+cAWtD/MnTF/4fE2/+Gwtr/hsLa/4bC2v+Gwtr/hsLa/4bC2v+Gwtr/hsLa/4bC2v+Gwtr/hsLa/4bC
        2v+Gwtr/hsLa/4bC2v+Gwtr/h8Pb/2SzuP82non/NJ2H/zedf/9JqVj/UbBLplCvTAAAAAAAAAAAAANi
        1gABbeMYBVDB5wUqmP8/ZZb/pdic/6TWnP+k1pz/pNac/6TWnP+k1pz/pNac/6TWnP+k1pz/pNac/6TW
        nP+k1pz/pNac/6TWnP+k1pz/pNac/6TWnP+l1pz/ecNw/1OxSP9SsUj/UrFI/1GwS/9Qr0ymUK9MAAAA
        AAAAAAAACDShAAg3pBgIMJznCCeV/x9Uff9Jo1H/SKJS/0iiUv9IolL/SKJS/0iiUv9IolL/SKJS/0ii
        Uv9IolL/SKJS/0iiUv9IolL/SKJS/0iiUv9IolL/SKJS/0iiUv9JolL/SaNT/0mjU/9JolP/TqpO9VCv
        TJZQr0wAAAAAAAAAAAAJKpQACSmTFAkqlNQJKpT/Cy6S/xA3jf8QNo3/EDaN/xA2jf8QNo3/EDaN/xA2
        jf8QNo3/EDaN/xA2jf8QNo3/EDaN/xA2jf8QNo3/EDaN/xA2jf8QNo3/EDaN/xA2jf8QNo3/EDaN/xA2
        jf8aSYNpdfUmClCvTAAAAAAAAAAAAAkpkgAJKJAECSqTeAkqlPQJKpT/CSmU/wkplP8JKZT/CSmU/wkp
        lP8JKZT/CSmU/wkplP8JKZT/CSmU/wkplP8JKZT/CSmU/wkplP8JKZT/CSmU/wkplP8JKZT/CSmU/wkp
        lP8JKZT/CSmU/wkplFgJKZQAAAAAAAAAAAAAAAAAAAAAAAkqkwAJK5MMCSmTXwkqlJ4JKpSnCSqUpgkq
        lKYJKpSmCSqUpgkqlKYJKpSmCSqUpgkqlKYJKpSmCSqUpgkqlKYJKpSmCSqUpgkqlKYJKpSmCSqUpgkq
        lKYJKpSmCSqUpgkqlKcJKpSbCSqULQkqlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////AAAAPgAAAB4AAAAeAAAAHgAAAB4AA
        AAeAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AA
        AA/AAAAP//////////////////////////8=
</value>
  </data>
</root>